> options(error=function() NULL)
> invisible(if (interactive()) source.pkg('pkg', dll='b'))
> options(vsalen=4, vsatype="realhrr", vsacnorm=FALSE, vsaopnorm=FALSE)
> set.seed(1)
> m5 <- vsamem(memsize=5, type="db", datatype="bit")
> m5
RAM DB (bit) containing 5 realhrr[4]: NA, NA, NA ...
> a <- newVec()
> b <- newVec()
> c <- newVec()
> d <- newVec()
> e <- newVec()
> m5 <- vsamem(a, b, memsize=5, type="db", datatype="bit")
> m5
RAM DB (bit) containing 5 realhrr[4]: a, b, NA ...
> contents(m5)
        a    b <NA> <NA> <NA>
[1,] -0.5  0.5 -0.5 -0.5 -0.5
[2,]  0.5 -0.5 -0.5 -0.5 -0.5
[3,] -0.5  0.5 -0.5 -0.5 -0.5
[4,]  0.5  0.5 -0.5 -0.5 -0.5
> getmemraw(m5, 1)
[1] 0a 00 00 00
> m5 <- vsamem(a, b, c, d, e, memsize=5, type="db", datatype="bit")
> sign(contents(m5))
      a  b  c  d  e
[1,] -1  1  1 -1 -1
[2,]  1 -1 -1 -1  1
[3,] -1  1  1  1  1
[4,]  1  1  1 -1  1
> all(sign(contents(m5)) == sign(cbind(a,b,c,d,e)))
[1] TRUE
> 
> dotmem(m5, a)
   a    b    c    d    e 
 1.0 -0.5 -0.5 -0.5  0.5 
> dotmem(m5, b)
   a    b    c    d    e 
-0.5  1.0  1.0  0.0  0.0 
> dotmem(m5, c)
   a    b    c    d    e 
-0.5  1.0  1.0  0.0  0.0 
> dotmem(m5, d)
   a    b    c    d    e 
-0.5  0.0  0.0  1.0  0.0 
> dotmem(m5, e)
  a   b   c   d   e 
0.5 0.0 0.0 0.0 1.0 
> ms <- sign(cbind(a,b,c,d,e))
> crossprod(ms) / nrow(ms)
     a    b    c    d   e
a  1.0 -0.5 -0.5 -0.5 0.5
b -0.5  1.0  1.0  0.0 0.0
c -0.5  1.0  1.0  0.0 0.0
d -0.5  0.0  0.0  1.0 0.0
e  0.5  0.0  0.0  0.0 1.0
> all.equal(abind(along=0, lapply(list(a=a,b=b,c=c,d=d,e=e), function(x) dotmem(m5, x))), crossprod(ms) / nrow(ms))
[1] TRUE
> 
> # Same thing again with big vectors 1017 bits long
> set.seed(1)
> options(vsalen=1017, vsatype="realhrr", vsacnorm=FALSE, vsaopnorm=FALSE)
> a <- newVec()
> b <- newVec()
> c <- newVec()
> d <- newVec()
> e <- newVec()
> m5 <- vsamem(a, b, c, d, e, memsize=5, type="db", datatype="bit")
> head(contents(m5))
               a           b           c           d           e
[1,] -0.03135736 -0.03135736  0.03135736  0.03135736 -0.03135736
[2,]  0.03135736 -0.03135736  0.03135736  0.03135736 -0.03135736
[3,] -0.03135736  0.03135736  0.03135736 -0.03135736  0.03135736
[4,]  0.03135736 -0.03135736 -0.03135736 -0.03135736  0.03135736
[5,]  0.03135736  0.03135736 -0.03135736  0.03135736  0.03135736
[6,] -0.03135736  0.03135736  0.03135736  0.03135736 -0.03135736
> head(getmemraw(m5, 1))
[1] da 4d 7e 61 c1 cc
> all(sign(contents(m5)) == sign(cbind(a,b,c,d,e)))
[1] TRUE
> dotmem(m5, a)
          a           b           c           d           e 
 1.00000000  0.05014749 -0.02458210 -0.01671583 -0.01081613 
> dotmem(m5, b)
          a           b           c           d           e 
 0.05014749  1.00000000 -0.01081613 -0.07767945  0.01474926 
> dotmem(m5, c)
          a           b           c           d           e 
-0.02458210 -0.01081613  1.00000000  0.03638151  0.02261554 
> dotmem(m5, d)
          a           b           c           d           e 
-0.01671583 -0.07767945  0.03638151  1.00000000 -0.06391347 
> dotmem(m5, e)
          a           b           c           d           e 
-0.01081613  0.01474926  0.02261554 -0.06391347  1.00000000 
> ms <- sign(cbind(a,b,c,d,e))
> crossprod(ms) / nrow(ms)
            a           b           c           d           e
a  1.00000000  0.05014749 -0.02458210 -0.01671583 -0.01081613
b  0.05014749  1.00000000 -0.01081613 -0.07767945  0.01474926
c -0.02458210 -0.01081613  1.00000000  0.03638151  0.02261554
d -0.01671583 -0.07767945  0.03638151  1.00000000 -0.06391347
e -0.01081613  0.01474926  0.02261554 -0.06391347  1.00000000
> all.equal(abind(along=0, lapply(list(a=a,b=b,c=c,d=d,e=e), function(x) dotmem(m5, x))), crossprod(ms) / nrow(ms))
[1] TRUE
> 
> 

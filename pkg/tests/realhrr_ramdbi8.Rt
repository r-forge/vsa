> options(error=function() NULL)
> options(digits=6)
> options(vsalen=4, vsatype="realhrr", vsacnorm=FALSE, vsaopnorm=FALSE)
> set.seed(1)
> m5 <- vsamem(memsize=5, type="db", datatype="int8")
> m5
RAM DB (int8) containing 5 realhrr[4]: NA, NA, NA ...
> a <- newVec()
> b <- newVec()
> c <- newVec()
> d <- newVec()
> e <- newVec()
> m5 <- vsamem(a, b, memsize=5, type="db", datatype="int8")
> m5
RAM DB (int8) containing 5 realhrr[4]: a, b, NA ...
> contents(m5)
              a         b <NA> <NA> <NA>
[1,] -0.3188976  0.165354    0    0    0
[2,]  0.0944882 -0.413386    0    0    0
[3,] -0.4133858  0.248031    0    0    0
[4,]  0.8031496  0.366142    0    0    0
> m5 <- setmem(m5, 4, d, label="d")
> m5
RAM DB (int8) containing 5 realhrr[4]: a, b, NA ...
> contents(m5)
              a         b <NA>         d <NA>
[1,] -0.3188976  0.165354    0 -0.307087    0
[2,]  0.0944882 -0.413386    0 -1.110236    0
[3,] -0.4133858  0.248031    0  0.566929    0
[4,]  0.8031496  0.366142    0 -0.023622    0
> 
> m5 <- setmem(m5, "c", c)
> contents(m5)
              a         b         c         d <NA>
[1,] -0.3188976  0.165354  0.283465 -0.307087    0
[2,]  0.0944882 -0.413386 -0.153543 -1.110236    0
[3,] -0.4133858  0.248031  0.755906  0.566929    0
[4,]  0.8031496  0.366142  0.200787 -0.023622    0
> m5 <- setmem(m5, "e", e)
> contents(m5)
              a         b         c         d         e
[1,] -0.3188976  0.165354  0.283465 -0.307087 -0.011811
[2,]  0.0944882 -0.413386 -0.153543 -1.110236  0.472441
[3,] -0.4133858  0.248031  0.755906  0.566929  0.413386
[4,]  0.8031496  0.366142  0.200787 -0.023622  0.295276
> 
> all.equal(contents(m5), cbind(a,b,c,d,e), tol=1e-2)
[1] TRUE
> 
> memmags(m5)
[1] 0.962580 0.627542 0.845953 1.284092 0.693841
> all.equal(as.numeric(sqrt(colSums(contents(m5)^2))), memmags(m5), tol=1e-6)
[1] TRUE
> # Need to round to 5 digits to get x64 and i386 results printing the same
> round(dotmem(m5, a), 5)
       a        b        c        d        e 
 0.92656  0.09974 -0.25612 -0.26031  0.11467 
> dotmem(m5, a, cos=T)
        a         b         c         d         e 
 1.005013  0.165948 -0.316108 -0.211653  0.172553 
> round(dotmem(m5, b, cos=T), 5)
      a       b       c       d       e 
0.16569 1.00344 0.70192 0.67261 0.03086 
> dot(a,b)
simval: 0.103358
> cosine(a,b)
simval: 0.172554
> 
> contents(m5)
              a         b         c         d         e
[1,] -0.3188976  0.165354  0.283465 -0.307087 -0.011811
[2,]  0.0944882 -0.413386 -0.153543 -1.110236  0.472441
[3,] -0.4133858  0.248031  0.755906  0.566929  0.413386
[4,]  0.8031496  0.366142  0.200787 -0.023622  0.295276
> m5 <- setmem(m5, "a", c)
> contents(m5)
             a         b         c         d         e
[1,]  0.283465  0.165354  0.283465 -0.307087 -0.011811
[2,] -0.153543 -0.413386 -0.153543 -1.110236  0.472441
[3,]  0.755906  0.248031  0.755906  0.566929  0.413386
[4,]  0.200787  0.366142  0.200787 -0.023622  0.295276
> m5 <- setmem(m5, "a", a)
> contents(m5)
              a         b         c         d         e
[1,] -0.3188976  0.165354  0.283465 -0.307087 -0.011811
[2,]  0.0944882 -0.413386 -0.153543 -1.110236  0.472441
[3,] -0.4133858  0.248031  0.755906  0.566929  0.413386
[4,]  0.8031496  0.366142  0.200787 -0.023622  0.295276
> m5 <- setmem(m5, 5, d, lab="f")
> contents(m5)
              a         b         c         d         f
[1,] -0.3188976  0.165354  0.283465 -0.307087 -0.307087
[2,]  0.0944882 -0.413386 -0.153543 -1.110236 -1.110236
[3,] -0.4133858  0.248031  0.755906  0.566929  0.566929
[4,]  0.8031496  0.366142  0.200787 -0.023622 -0.023622
> memmags(m5)
[1] 0.962580 0.627542 0.845953 1.284092 1.284092
> all.equal(as.numeric(sqrt(colSums(contents(m5)^2))), memmags(m5), tol=1e-6)
[1] TRUE
> 
